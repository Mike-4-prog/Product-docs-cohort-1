"use strict";(self.webpackChunkomarray=self.webpackChunkomarray||[]).push([[262],{1341:(n,s,a)=>{a.r(s),a.d(s,{comp:()=>t,data:()=>o});var e=a(641);const p={},t=(0,a(6262).A)(p,[["render",function(n,s){return(0,e.uX)(),(0,e.CE)("div",null,s[0]||(s[0]=[(0,e.Fv)('<h2 id="openmadness-faq" tabindex="-1"><a class="header-anchor" href="#openmadness-faq"><span>OpenMadness FAQ</span></a></h2><p>Welcome to the OpenMadness Frequently Asked Questions! Here we answer common questions about our JavaScript array operations library inspired by NumPy.</p><hr><h3 id="general-questions" tabindex="-1"><a class="header-anchor" href="#general-questions"><span>General Questions</span></a></h3><p><code>Q: What makes OpenMadness different from regular JavaScript arrays?</code></p><p>OpenMadness provides NumPy-style operations that are:</p><ul><li>Optimized for performance</li><li>Chainable via pipelines</li><li>More expressive for math/data tasks</li></ul><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// Regular JS</span></span>\n<span class="line"><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">*</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span><span class="token parameter">x</span> <span class="token operator">=&gt;</span> x <span class="token operator">&gt;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// OpenMadness</span></span>\n<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> multiply<span class="token punctuation">,</span> filter<span class="token punctuation">,</span> gt<span class="token punctuation">,</span> pipe <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;openmadness&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token function">pipe</span><span class="token punctuation">(</span></span>\n<span class="line">  <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token function">filter</span><span class="token punctuation">(</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Q: How big can my arrays be?</code></p><p>Openmadness handles arrays up to 1 million elements efficiently. For larger datasets:</p><ul><li><p>Use typed arrays (Float64Array)</p></li><li><p>Process in chunks</p></li><li><p>Consider Web Workers for parallel processing</p></li></ul><h3 id="installation-issues" tabindex="-1"><a class="header-anchor" href="#installation-issues"><span>Installation Issues</span></a></h3><p><code>Q: Getting &quot;Module not found&quot; errors?</code> Try these fixes:</p><ol><li>Reinstall:</li></ol><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh"><pre><code><span class="line"><span class="token function">npm</span> uninstall openmadness <span class="token operator">&amp;&amp;</span> <span class="token function">npm</span> <span class="token function">install</span> openmadness</span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ol start="2"><li>Check your import:</li></ol><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token comment">// Correct</span></span>\n<span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> sum <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;openmadness&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// Wrong</span></span>\n<span class="line"><span class="token keyword">import</span> sum <span class="token keyword">from</span> <span class="token string">&#39;openmadness/sum&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="common-operations" tabindex="-1"><a class="header-anchor" href="#common-operations"><span>Common Operations</span></a></h3><p><code>Q: How do I filter arrays by multiple conditions?</code></p><p>Use <code>and()</code>/<code>or()</code> combiners:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> gt<span class="token punctuation">,</span> lt<span class="token punctuation">,</span> and <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;openmadness&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token keyword">const</span> data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token keyword">const</span> mask <span class="token operator">=</span> <span class="token function">and</span><span class="token punctuation">(</span><span class="token function">gt</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">lt</span><span class="token punctuation">(</span>data<span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"><span class="token comment">// [false, false, true, false, false]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>Q: What&#39;s the equivalent of NumPy&#39;s where()?</code></p><p>We have two options:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> where<span class="token punctuation">,</span> setWhere <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;openmadness&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// 1. Get values where condition is true</span></span>\n<span class="line"><span class="token function">where</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// [1, 3]</span></span>\n<span class="line"></span>\n<span class="line"><span class="token comment">// 2. Replace values</span></span>\n<span class="line"><span class="token function">setWhere</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span> </span>\n<span class="line"><span class="token comment">// [0, 2, 0]</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="performance-questions" tabindex="-1"><a class="header-anchor" href="#performance-questions"><span>Performance Questions</span></a></h3><p><code>Q: Why is my operation slower than vanilla JS?</code></p><p>For small arrays (&lt;100 elements), vanilla JS might be faster. OpenMadness shines when:</p><ul><li><p>Working with &gt;1,000 elements</p></li><li><p>Chaining multiple operations</p></li><li><p>Using typed arrays</p></li></ul><div class="hint-container tip"><p class="hint-container-title">Tips</p><p>Always benchmark with <code>console.time()</code>!</p></div><h3 id="troubleshooting" tabindex="-1"><a class="header-anchor" href="#troubleshooting"><span>Troubleshooting</span></a></h3><p><code>Q: My pipeline isn&#39;t working as expected</code></p><p>Try debugging with <code>log()</code>:</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js"><pre><code><span class="line"><span class="token keyword">import</span> <span class="token punctuation">{</span> pipe<span class="token punctuation">,</span> log <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;openmadness&#39;</span><span class="token punctuation">;</span></span>\n<span class="line"></span>\n<span class="line"><span class="token function">pipe</span><span class="token punctuation">(</span></span>\n<span class="line">  <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;Input:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token function">multiply</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;After multiply:&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span></span>\n<span class="line">  <span class="token function">filter</span><span class="token punctuation">(</span><span class="token function">gt</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span>\n<span class="line"><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>\n<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="community-support" tabindex="-1"><a class="header-anchor" href="#community-support"><span>Community &amp; Support</span></a></h3><p><code>Q: Where can I ask questions not covered here?</code></p><p>We are happy to help! Try:</p><ul><li><a href="https://github.com/openmadness/openmadness/discussions" target="_blank" rel="noopener noreferrer">GitHub Discussions</a></li><li><a href="https://stackoverflow.com/questions/tagged/openmadness" target="_blank" rel="noopener noreferrer">Stack Overflow</a></li><li><a href="https://discord.gg/openmadness" target="_blank" rel="noopener noreferrer">Join our Discord Community</a></li></ul><p>&quot;The only bad question is the unasked one!&quot; Happy coding!</p>',38)]))}]]),o=JSON.parse('{"path":"/faq.html","title":"OpenMadness FAQ","lang":"en-US","frontmatter":{"title":"OpenMadness FAQ","description":"Frequently Asked Questions about the OpenMadness array operations library"},"headers":[{"level":2,"title":"OpenMadness FAQ","slug":"openmadness-faq","link":"#openmadness-faq","children":[{"level":3,"title":"General Questions","slug":"general-questions","link":"#general-questions","children":[]},{"level":3,"title":"Installation Issues","slug":"installation-issues","link":"#installation-issues","children":[]},{"level":3,"title":"Common Operations","slug":"common-operations","link":"#common-operations","children":[]},{"level":3,"title":"Performance Questions","slug":"performance-questions","link":"#performance-questions","children":[]},{"level":3,"title":"Troubleshooting","slug":"troubleshooting","link":"#troubleshooting","children":[]},{"level":3,"title":"Community & Support","slug":"community-support","link":"#community-support","children":[]}]}],"git":{"updatedTime":1751615753000,"contributors":[{"name":"Richard-Emmanuel","username":"Richard-Emmanuel","email":"richardnuelofficial@gmail.com","commits":2,"url":"https://github.com/Richard-Emmanuel"},{"name":"Michael Uzukwu","username":"","email":"uzukwuekene.michael@gmail.com","commits":1}],"changelog":[{"hash":"bf94eca0bf90afba68875c2dd836cbca93395ea7","time":1751615753000,"email":"uzukwuekene.michael@gmail.com","author":"Michael Uzukwu","message":"Mikedocs (#33)","coAuthors":[{"name":"Richard Emmanuel","email":"104577891+Richard-Emmanuel@users.noreply.github.com"}]},{"hash":"8fdd7fc642897274d460b071cd9501cf91c37820","time":1750507911000,"email":"richardnuelofficial@gmail.com","author":"Richard-Emmanuel","message":"Initial Project Setup"}]},"filePathRelative":"faq.md"}')}}]);